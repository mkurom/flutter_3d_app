// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_3d_app/test/features/maze_ball/data/repositories/maze_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter_3d_app/features/maze_ball/data/datasources/maze_generator.dart'
    as _i3;
import 'package:flutter_3d_app/features/maze_ball/domain/entities/maze.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMaze_0 extends _i1.SmartFake implements _i2.Maze {
  _FakeMaze_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MazeGenerator].
///
/// See the documentation for Mockito's code generation for more information.
class MockMazeGenerator extends _i1.Mock implements _i3.MazeGenerator {
  MockMazeGenerator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Maze generateSimpleMaze(int? width, int? height) =>
      (super.noSuchMethod(
            Invocation.method(#generateSimpleMaze, [width, height]),
            returnValue: _FakeMaze_0(
              this,
              Invocation.method(#generateSimpleMaze, [width, height]),
            ),
          )
          as _i2.Maze);

  @override
  _i2.Maze generateMazeForLevel(int? level) =>
      (super.noSuchMethod(
            Invocation.method(#generateMazeForLevel, [level]),
            returnValue: _FakeMaze_0(
              this,
              Invocation.method(#generateMazeForLevel, [level]),
            ),
          )
          as _i2.Maze);

  @override
  _i2.Maze generateDFSMaze(int? width, int? height) =>
      (super.noSuchMethod(
            Invocation.method(#generateDFSMaze, [width, height]),
            returnValue: _FakeMaze_0(
              this,
              Invocation.method(#generateDFSMaze, [width, height]),
            ),
          )
          as _i2.Maze);
}
